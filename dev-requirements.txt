# Pip requirements file for development dependencies.
#
# The order of packages is significant, because pip processes them in the order
# of appearance. Changing the order has an impact on the overall integration
# process, which may cause wedges in the gate later.

# Make sure that the package versions in minimum-constraints.txt are also
# the minimum versions required in requirements.txt and dev-requirements.txt.


# Runtime dependencies:
-r requirements.txt


# Unit test:
# pytest 5.0.0 has removed support for Python < 3.5
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,<5.0.0; python_version == '2.7'
pytest>=4.3.1; python_version >= '3.5' and python_version <= '3.6'
pytest>=4.4.0; python_version >= '3.7'

# colorama 0.4.3 has removed support for Python < 3.5
colorama>=0.4.0; sys_platform == "win32" and python_version == "2.7"
colorama>=0.4.0; sys_platform == "win32" and python_version >= "3.5"

# Coverage reporting (no imports, invoked via coveralls script):
coverage>=5.0
pytest-cov>=2.7.0
# coveralls 2.0 has removed support for Python 2.7
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
# TODO: Remove coveralls pinning to <3.0.0 once fixed (TheKevJames/coveralls-python#252)
coveralls>=2.1.2,<3.0.0; python_version >= '3.5'
# PyYAML: covered in direct deps for development

# Sphinx (no imports, invoked via sphinx-build script):
Sphinx>=1.7.6,<2.0.0; python_version == '2.7'
Sphinx>=3.5.4,!=4.0.0,<4.3.0; python_version >= '3.5'
# TODO: On py3.5+, Sphinx currently fails, see issue
#       https://github.com/sphinx-doc/sphinx/issues/6246. Therefore, Sphinx has
#       been pinned to below 2.0.0 also for py3.5+.
sphinx-git>=10.1.1 # GPL
GitPython>=2.1.1 # BSD
Pygments>=2.1.3; python_version == '2.7'
Pygments>=2.5.1; python_version >= '3.5'
sphinx-rtd-theme>=0.5.0
# Sphinx <4.3.0 requires docutils <0.18 due to an incompatibility
docutils>=0.13.1,<0.18

# readme-renderer (used by twine, uses Pygments)
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin and on Windows with py27)
# readme-renderer 25.0 or higher is needed to address issue on Windows with py39
readme-renderer>=23.0; python_version == '2.7'
readme-renderer>=25.0; python_version >= '3.5'

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 1.x / astroid 1.x supports py27 and py34/35/36
# Pylint 2.0 / astroid 2.0 removed py27, added py37
# Workaround: lazy-object-proxy fails installing on macos/py35/minimum, because it uses
#   setuptools-scm for its setup and (up to 1.5.2) does not correctly pin setuptools-scm.
#   Not clear why this does not happen on ubuntu/windows with py35 or on py34.
#   See issue https://github.com/ionelmc/python-lazy-object-proxy/issues/51.
#   Working around this by not installing pylint/astroid on py35.
#   TODO: If lazy-object-proxy releases a correctly pinned 1.4.x version, this workaround
#         can be removed again.
pylint>=1.6.4,<2.0.0; python_version == '2.7'
pylint>=2.5.0; python_version >= '3.6'
astroid>=1.4.9,<2.0.0; python_version == '2.7'
astroid>=2.4.0; python_version >= '3.6'
# typed-ast is used by astroid on py34..py37
typed-ast>=1.4.0,<1.5.0; python_version >= '3.6' and python_version <= '3.7' and implementation_name=='cpython'
lazy-object-proxy>=1.4.3; python_version == '2.7'
lazy-object-proxy>=1.4.3; python_version >= '3.6'
# platformdirs is used by pylint starting with its 2.10
platformdirs>=2.2.0; python_version >= '3.6'
# wrapt 1.13.0 started depending on MS Visual C++ 9.0 on Python 2.7 on Windows,
#   which is not available by default on GitHub Actions
wrapt>=1.11.2,<1.13; sys_platform == 'win32' and python_version == '2.7'
wrapt>=1.11.2; sys_platform != 'win32' and python_version == '2.7'
wrapt>=1.11.2; python_version >= '3.5'

# Flake8 (no imports, invoked via flake8 script):
flake8>=3.8.0
mccabe>=0.6.0
pycodestyle>=2.6.0
pyflakes>=2.2.0
entrypoints>=0.3.0
functools32>=3.2.3.post2; python_version == '2.7'  # technically: python_version < '3.2'

# Twine (no imports, invoked via twine script):
twine>=1.8.1 # Apache-2.0

# Unit test (indirect dependencies):
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
pluggy>=0.7.1; python_version == '2.7'
pluggy>=0.7.1; python_version >= '3.5' and python_version <= '3.6'
pluggy>=0.13.0; python_version >= '3.7'

# Package dependency management tools (not used by any make rules)
pipdeptree>=2.0.0
pip-check-reqs>=2.0.4,<2.1.1; python_version == '2.7'
pip-check-reqs>=2.0.4; python_version >= '3.5'

# Indirect dependencies (normally commented out, only listed to document their license):

# alabaster # BSD, from Sphinx
# atomicwrites # TBD
# attrs # TBD
# Babel # BSD, from Sphinx
# backports.functools-lru-cache # MIT, from pylint
# bleach # Apache, from ???
# configparser # MIT, from pylint and from flake8 for py<3.2
# contextlib2 # TBD
# coverage # Apache-2.0, from pytest-cov
# docutils # public domain | Python | 2-Clause BSD | GPL 3, from Sphinx
# enum34 # BSD, from astroid
# funcsigs # Apache, from mock for py<3.3
# futures # TBD
# gitdb2 # BSD, from GitPython
# imagesize # MIT, from Sphinx
# importlib-metadata # TBD
# isort # MIT, from pylint
# Jinja2 # BSD, from Sphinx
# keyring # TBD
# MarkupSafe # BSD, from Jinja2 -> Sphinx
# more-itertools # TBD
# packaging # TBD
# pathlib2 # MIT, from ???
# pkginfo # MIT, from twine
# py # MIT, from pytest
# pyparsing # TBD
# readme-renderer # TBD
# requests-toolbelt # Apache 2.0, from twine
# scandir # New BSD, from pathlib2 for py<3.6 -> pytest
# singledispatch # MIT, from pylint
# smmap2 # BSD, from gitdb2 -> GitPython
# snowballstemmer # BSD, from Sphinx
# sphinxcontrib-websupport # BSD, from Sphinx>=1.6.1
# tqdm # MPL 2.0, MIT, from twine>=1.9.1
# typing # PSFL, from Sphinx>=1.6.1 for py<3.5
# webencodings # BSD, from ???
# zipp # TBD
