# Pip requirements file for development dependencies.
#
# The order of packages is significant, because pip processes them in the order
# of appearance. Changing the order has an impact on the overall integration
# process, which may cause wedges in the gate later.

# Make sure that the package versions in minimum-constraints.txt are also
# the minimum versions required in requirements.txt and dev-requirements.txt.


# Runtime dependencies:
-r requirements.txt


# Tox
tox>=2.5.0

# Virtualenv
# build requires virtualenv.cli_run which was added in 20.1
# virtualenv 20.0 requires six<2,>=1.12.0
virtualenv>=20.1.0

# PEP517 package builder, used in Makefile
build>=0.5.0
# build up to version 0.9 requires pep517>=0.9.1
pep517>=0.9.1

# Safety CI by pyup.io
# Safety is run only on Python >=3.6
safety>=2.2.0; python_version >= '3.6'
dparse>=0.6.2; python_version >= '3.6'

# Unit test:
# pytest 5.0.0 has removed support for Python < 3.5
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,<5.0.0; python_version == '2.7'
pytest>=4.3.1; python_version >= '3.5' and python_version <= '3.6'
pytest>=4.4.0; python_version >= '3.7' and python_version <= '3.9'
pytest>=6.2.5; python_version >= '3.10'
# flake8 up to 6.0.0 has not yet adjusted to the removed interfaces of importlib-metadata 5.0
importlib-metadata>=0.22,<4.3; python_version <= '3.6'
importlib-metadata>=1.1.0,<4.3; python_version >= '3.7'

# packaging is used by pytest, pip-check-reqs, sphinx
# packaging>=20.5 is needed by pip-check-reqs 2.4.3 but it requires only packaging>=16.0
# packaging 21.0 removed support for Python <3.6
# packaging 22.0 removed support for py36
packaging>=20.5; python_version <= '3.5'
packaging>=21.0,<22.0; python_version >= '3.6'

# colorama 0.4.3 has removed support for Python < 3.5
colorama>=0.3.9; python_version == '2.7'
colorama>=0.4.5; python_version >= '3.5'

# Coverage reporting (no imports, invoked via coveralls script):
coverage>=5.0
pytest-cov>=2.7.0
# coveralls 2.0 has removed support for Python 2.7
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
coveralls>=3.3.0; python_version >= '3.5'

# PyYAML: covered in direct deps for development

# Sphinx (no imports, invoked via sphinx-build script):
# Sphinx 2.0.0 removed support for Python 2.7
# Sphinx 4.0.0 breaks autodocsumm and needs to be excluded
# Sphinx <4.3.0 requires docutils <0.18 due to an incompatibility
# Sphinx 3.0.4 fixes safety issues 45775,38330
# Sphinx <4.2.0 fails on Python 3.10 because it tries to import non-existing
#   types.Union. This also drives docutils>=0.14.
# Sphinx pins docutils to <0.18 (some versions even to <0.17) but the package
#   version resolver in the pip version used on py27 ignores package dependencies
Sphinx>=1.7.6,<2.0.0; python_version == '2.7'
Sphinx>=3.5.4,!=4.0.0,<4.3.0; python_version >= '3.5' and python_version <= '3.9'
Sphinx>=4.2.0; python_version >= '3.10'
docutils>=0.13.1,<0.17; python_version == '2.7'
docutils>=0.13.1,<0.17; python_version >= '3.5' and python_version <= '3.9'
docutils>=0.14,<0.17; python_version == '3.10'
docutils>=0.16,<0.17; python_version >= '3.11'
sphinx-git>=10.1.1
# GitPython version 3.0.0 and newer does not support Python 2.7
# GitPython version 3.1.24 requires Python >=3.7
# GitPython version 3.1.27 fixes safety issue #52518
# GitPython 3.1.30 fixes safety issues 52322,52518
GitPython>=2.1.1,<3.0.0; python_version == '2.7'
GitPython>=2.1.1; python_version >= '3.5' and python_version <= '3.6'
GitPython>=3.1.34; python_version >= '3.7'
# Pygments 2.7.4 fixes safety issues 50885,50886
Pygments>=2.4.1; python_version == '2.7'
Pygments>=2.7.4; python_version >= '3.5' and python_version <= '3.6'
Pygments>=2.15.0; python_version >= '3.7'
sphinx-rtd-theme>=1.0.0
# Babel 2.7.0 fixes an ImportError for MutableMapping which starts failing on Python 3.10
# Babel 2.9.1 fixes safety issue 42203
Babel>=2.9.1

# PyLint (no imports, invoked via pylint script)
# Pylint is not run on py27 anymore
# Pylint requires astroid
# Pylint 1.x / astroid 1.x supports py27 and py34/35/36
# Pylint 2.0 / astroid 2.0 removed py27, added py37
# Pylint 2.4 / astroid 2.3 removed py34
# Issue #2673: Pinning Pylint to <2.7.0 is a circumvention for Pylint issue
#   https://github.com/PyCQA/pylint/issues/4120 that appears in Pylint 2.7.0.
#   Pylint 2.10 has fixed the issue.
# Pylint 2.7.0 fixes safety issue 39621
# Pylint 2.13.0 fixes safety issue 45185
pylint>=2.5.2,<2.7.0; python_version == '3.5'
pylint>=2.13.0,<2.14.0; python_version == '3.6'
pylint>=2.13.0; python_version >= '3.7' and python_version <= '3.10'
pylint>=2.15.0; python_version >= '3.11'
astroid>=2.4.0,<2.6.0; python_version == '3.5'
astroid>=2.11.0; python_version >= '3.6' and python_version <= '3.10'
astroid>=2.12.4; python_version >= '3.11'
typed-ast>=1.4.0,<1.5.0; python_version >= '3.6' and python_version < '3.8' and implementation_name=='cpython'
# lazy-object-proxy is used by astroid
lazy-object-proxy>=1.4.3; python_version >= '3.5'
wrapt>=1.11.2; python_version >= '3.5' and python_version <= '3.10'
wrapt>=1.14; python_version >= '3.11'
# platformdirs is used by pylint starting with its 2.10
platformdirs>=2.2.0; python_version >= '3.6'
# isort 5.0.0 removed support for py27,py35
# isort 4.2.8 fixes a pylint issue with false positive on import order of ssl on Windows
# isort 4.3.8 fixes an issue with py310 and works on py310 (Note that isort 5.10.0 has official support for py310)
isort>=4.3.8
# Pylint 2.14 uses tomlkit>=0.10.1 and requires py>=3.7
tomlkit>=0.10.1; python_version >= '3.7'
# dill is used by pylint >=2.13
dill>=0.2; python_version >= '3.6' and python_version <= '3.10'
dill>=0.3.6; python_version >= '3.11'

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 3.9.0 has removed support for py34 and pip 19.1.1 on py34 does not deal
# well with its pinned dependencies, so we need to repeat these for py34.
# flake8 4.0.0 fixes an AttributeError on Python 3.10.
flake8>=3.8.0; python_version <= '3.9'
flake8>=4.0.0; python_version >= '3.10'
mccabe>=0.6.0
pycodestyle>=2.6.0,<2.8.0; python_version == '2.7'
pycodestyle>=2.6.0; python_version >= '3.5' and python_version <= '3.9'
pycodestyle>=2.8.0; python_version >= '3.10'
pyflakes>=2.2.0,<2.4.0; python_version == '2.7'
pyflakes>=2.2.0; python_version >= '3.5' and python_version <= '3.9'
pyflakes>=2.4.0; python_version >= '3.10'
entrypoints>=0.3.0
functools32>=3.2.3.post2; python_version == '2.7'  # technically: python_version < '3.2'

# Twine (no imports, invoked via twine script):
# twine 2.0.0 removed support for Python < 3.6
twine>=1.8.1,<2.0.0; python_version <= '3.5'
twine>=3.0.0; python_version >= '3.6'
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin)
# readme-renderer 25.0 or higher is needed to address issue on Windows with py39
readme-renderer>=23.0; python_version == '2.7'
readme-renderer>=25.0; python_version >= '3.5'

# Unit test (indirect dependencies):
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
pluggy>=0.7.1; python_version == '2.7'
pluggy>=0.7.1; python_version >= '3.5' and python_version <= '3.6'
pluggy>=0.13.0; python_version >= '3.7'

# Package dependency management tools (not used by any make rules)
pipdeptree>=2.2.0
# pip-check-reqs is not used on Python 2.7
# pip-check-reqs 2.3.2 is needed to have proper support for pip<21.3.
# pip-check-reqs 2.4.0 requires Python>=3.8.
# pip-check-reqs 2.4.3 fixes a speed issue on Python 3.11 and requires pip>=21.2.4
# pip-check-reqs 2.5.0 has issue https://github.com/r1chardj0n3s/pip-check-reqs/issues/143
pip-check-reqs>=2.3.2; python_version >= '3.5' and python_version <= '3.7'
pip-check-reqs>=2.4.3,!=2.5.0; python_version >= '3.8'

# Indirect dependencies (normally commented out, only listed to document their license):

# alabaster # BSD, from Sphinx
# atomicwrites # TBD
# attrs # TBD
# backports.functools-lru-cache # MIT, from pylint
# bleach # Apache, from ???
# configparser # MIT, from pylint and from flake8 for py<3.2
# contextlib2 # TBD
# coverage # Apache-2.0, from pytest-cov
# docutils # public domain | Python | 2-Clause BSD | GPL 3, from Sphinx
# enum34 # BSD, from astroid
# funcsigs # Apache, from mock for py<3.3
# futures # TBD
# gitdb2 # BSD, from GitPython
# gitdb # BSD, from GitPython
# imagesize # MIT, from Sphinx
# isort # MIT, from pylint
# Jinja2 # BSD, from Sphinx
# keyring # TBD
# MarkupSafe # BSD, from Jinja2 -> Sphinx
# more-itertools # TBD
# packaging # TBD
# pathlib2 # MIT, from ???
# pkginfo # MIT, from twine
# py # MIT, from pytest
# pyparsing # TBD
# requests-toolbelt # Apache 2.0, from twine
# scandir # New BSD, from pathlib2 for py<3.6 -> pytest
# singledispatch # MIT, from pylint
# smmap2 # BSD, from gitdb2 -> GitPython
# smmap # BSD, from gitdb -> GitPython
# snowballstemmer # BSD, from Sphinx
# sphinxcontrib-websupport # BSD, from Sphinx>=1.6.1
# tqdm # MPL 2.0, MIT, from twine>=1.9.1
# typing # PSFL, from Sphinx>=1.6.1 for py<3.5
# webencodings # BSD, from ???
# zipp # TBD
